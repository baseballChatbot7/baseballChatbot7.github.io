<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Baseball Chatbot</title>
    <description>We can answer your questions about baseball</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 06 Jul 2021 18:35:46 +0900</pubDate>
    <lastBuildDate>Tue, 06 Jul 2021 18:35:46 +0900</lastBuildDate>
    <generator>Jekyll v4.0.1</generator>
    
      <item>
        <title>meeting_log_2021.06.26</title>
        <description>&lt;h1 id=&quot;20210612-회의록&quot;&gt;2021.06.12 회의록&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;김남혁님
    &lt;ul&gt;
      &lt;li&gt;NER, MRC 경량화&lt;/li&gt;
      &lt;li&gt;MRC 학습만 다시 하면 좋을 듯하다. –&amp;gt; 야구 데이터를 가지고 학습을 해야할 것 같다&lt;/li&gt;
      &lt;li&gt;전체적인 파이프라인 정리해놓음 -&amp;gt; NER 추가해주면 될꺼 같다.&lt;/li&gt;
      &lt;li&gt;사람이 쓸정도로 만드려면 시간이 오래 걸릴꺼같다.&lt;/li&gt;
      &lt;li&gt;실시간 데이터 고민해야한다.&lt;/li&gt;
      &lt;li&gt;앞으로 2주 정도…카카오 톡에서 돌아가게 하면 좋을것같은데&lt;/li&gt;
      &lt;li&gt;살아 있는 동안 우리 서버에서 해도 되고 GCP를 써서 해도 될듯하다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;할 일
    &lt;ul&gt;
      &lt;li&gt;김남혁님
        &lt;ul&gt;
          &lt;li&gt;파이프 라인에 영재님 NER추가 해서 백엔드에 주기&lt;/li&gt;
          &lt;li&gt;나무위키 데이터 문서 수를 줄이는 것&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;종빈님 &amp;amp; 서일님
        &lt;ul&gt;
          &lt;li&gt;야구 전용 MRC데이터 생성&lt;/li&gt;
          &lt;li&gt;convolution을 빼고 학습할 예정&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;민정님 &amp;amp; 병민님
        &lt;ul&gt;
          &lt;li&gt;카카오 답변 지연에 대한 이슈를 정리&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 26 Jun 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/meeting-log-20210626/</link>
        <guid isPermaLink="true">http://localhost:4000/meeting-log-20210626/</guid>
        
        
      </item>
    
      <item>
        <title>meeting_log_2021.06.12</title>
        <description>&lt;h1 id=&quot;20210612-회의록&quot;&gt;2021.06.12 회의록&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;김남혁 님: 네트워킹 데이랑 하는 작업이 조금 겹친다.
    &lt;ul&gt;
      &lt;li&gt;플라스크 서빙 단계에서, 전처리 후처리를 작업하고 있다.&lt;/li&gt;
      &lt;li&gt;후처리는 조사 제거&lt;/li&gt;
      &lt;li&gt;전처리는 서치 오탈자, dudxkcjfl -&amp;gt; 영타처리도 작업하고 있음(지금은 두 쿼리를 그냥 날려버리는 걸로)&lt;/li&gt;
      &lt;li&gt;로그 파일 기록도 가능하면 좋을 것 같습니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;우종빈 님:
    &lt;ul&gt;
      &lt;li&gt;onnx로 추론 속도를 빠르게 만들고 있다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;유영재 님:
    &lt;ul&gt;
      &lt;li&gt;룰 베이스 제작 중이다.&lt;/li&gt;
      &lt;li&gt;ner 엘렉트라 스몰로 학습하고 있다. 성능은 잘 나오고 있고, 오늘 공유할 예정이다.&lt;/li&gt;
      &lt;li&gt;김남혁 님: 포스팅 부탁드립니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;조민정,최병민 님:
    &lt;ul&gt;
      &lt;li&gt;코드 모듈화 중이다.&lt;/li&gt;
      &lt;li&gt;입력/출력 지연에 대한 대응을 더 구체화 시키고 있다.&lt;/li&gt;
      &lt;li&gt;데드라인이 바뀌면 제공되는 서버를 사용하기 어렵기 때문에, 미리 옮길 서버를 생각해야할 것 같다.
        &lt;ul&gt;
          &lt;li&gt;GCP 대비 중&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 12 Jun 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/meeting-log-20210612/</link>
        <guid isPermaLink="true">http://localhost:4000/meeting-log-20210612/</guid>
        
        
      </item>
    
      <item>
        <title>카카오 봇을 만들어 보자</title>
        <description>&lt;h1 id=&quot;카카오-봇을-만들어-보자&quot;&gt;카카오 봇을 만들어 보자&lt;/h1&gt;

&lt;h2 id=&quot;준비물&quot;&gt;준비물&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;카카오 봇과 통신할 서버&lt;/li&gt;
  &lt;li&gt;FLASK&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-서버-구축하기&quot;&gt;1. 서버 구축하기&lt;/h2&gt;

&lt;p&gt;우선, 해당 프로젝트에서 서버는 FLASK로 구성되어 있다.&lt;br /&gt;
그렇다면 서버는 어디에 구축해야할까? &lt;br /&gt;
나는 우선 AWS에 서버를 구축하고자 하였다. &lt;br /&gt;
@&lt;a href=&quot;https://aws.amazon.com/ko/free/?trk=ps_a134p000003yHYmAAM&amp;amp;trkCampaign=acq_paid_search_brand&amp;amp;sc_channel=PS&amp;amp;sc_campaign=acquisition_KR&amp;amp;sc_publisher=Google&amp;amp;sc_category=Core-Main&amp;amp;sc_country=KR&amp;amp;sc_geo=APAC&amp;amp;sc_outcome=acq&amp;amp;sc_detail=aws&amp;amp;sc_content=Brand_Core_aws_e&amp;amp;sc_segment=444218215904&amp;amp;sc_medium=ACQ-P|PS-GO|Brand|Desktop|SU|Core-Main|Core|KR|EN|Text&amp;amp;s_kwcid=AL!4422!3!444218215904!e!!g!!aws&amp;amp;ef_id=Cj0KCQjw78yFBhCZARIsAOxgSx3rXWSipdhn3Pw6TpGlvsh7Z0lWqzNYZcdYdJN-y73HNkR4HfRFn8oaAnRQEALw_wcB:G:s&amp;amp;s_kwcid=AL!4422!3!444218215904!e!!g!!aws&amp;amp;all-free-tier.sort-by=item.additionalFields.SortRank&amp;amp;all-free-tier.sort-order=asc&amp;amp;awsf.Free%20Tier%20Types=*all&amp;amp;awsf.Free%20Tier%20Categories=*all&quot;&gt;aws 서버 구축&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/68745983/120215008-30748380-c270-11eb-9d64-39ff224e070c.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;AWS의 프리티어 지원을 해주는 인스턴스를 선택하여 서버를 구성하였습니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;자, 그럼 이제 FLASK를 서버에 설치해줄까요?&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://salguworld.tistory.com/12&quot;&gt;참고 블로그&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/68745983/120216486-0e7c0080-c272-11eb-8e2f-f4ff018a00ba.png&quot; alt=&quot;image&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;이렇게 FLASK가 설치된 것을 확인할 수 있다.&lt;/li&gt;
  &lt;li&gt;그렇다면 이제 서버를 돌려보도록 하자 &amp;gt;&amp;lt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2-서버-구성하기&quot;&gt;2. 서버 구성하기&lt;/h2&gt;

&lt;p&gt;우선 Toy Code를 만들어 서버를 열고 확인해보자.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;from flask import Flask, request, jsonify

app = Flask(__name__)

@app.route('/keyboard')
def Keyboard():
    dataSend = {
    }
    return jsonify(dataSend)

if __name__ == &quot;__main__&quot;:
    app.run(host = '0.0.0.0', port = 5000)

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;위의 코드를 돌리고 서버의 url:5000/에 접속해보자.
&lt;img src=&quot;https://user-images.githubusercontent.com/68745983/120227780-cfa37600-c284-11eb-9c2f-9b149180c648.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;잘 실행되는 것을 확인 할 수 있다. &lt;br /&gt;
자, 그렁다면 이제 카카오 챗봇과 서버를 연결해줘야한다.&lt;/p&gt;

&lt;h2 id=&quot;3-챗봇-연결하기&quot;&gt;3. 챗봇 연결하기&lt;/h2&gt;
&lt;h3 id=&quot;1-챗봇-만들기&quot;&gt;1. 챗봇 만들기&lt;/h3&gt;

&lt;p&gt;@&lt;a href=&quot;https://center-pf.kakao.com/&quot;&gt;카카오 채널 관리자 센터&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;위의 url을 통해 카카오 채널을 만들어 주자. 여기서 주의해야하는 것은&lt;/p&gt;

&lt;p&gt;** 대시보드 &amp;gt; 프로필 설정 &amp;gt; 채널 공개**를 허용해야한다. &lt;br /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/68745983/120228061-59ebda00-c285-11eb-9189-09dbfb831f49.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;자, 그렇다면 카카오 오픈빌더를 통해 챗봇을 생성하여 생성된 오픈채널과 연결해주어야한다. &lt;br /&gt;
그러면 카카오 오픈빌더에서 챗봇을 만들어 보자.&lt;/p&gt;

&lt;p&gt;@&lt;a href=&quot;https://i.kakao.com/&quot;&gt;카카오 채널 챗봇 만들기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;해당 페이지를 들어가면 아래와 같이 선택지가 뜨는데 여기서 &lt;strong&gt;카카오톡 채널 챗봇 만들기&lt;/strong&gt;를 선택해줘야한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/68745983/120228240-b2bb7280-c285-11eb-86cf-98f6f178cbdd.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;여기서 신청서를 조금 자세하게 적으면 승인이 될것이다 (대충 썼다가 한번 반려당했다 + 위의 카카오톡 채널공개 안했다가 한번더 반려당했다.)&lt;/p&gt;

&lt;h3 id=&quot;2-서버와-챗봇-연결하기&quot;&gt;2. 서버와 챗봇 연결하기&lt;/h3&gt;

&lt;p&gt;우선 앞서 만들어놓은 server.py code에 아래의 method를 추가해주자.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@app.route('/message', methods=['POST'])
def Message():
    content = request.get_json()
    text = content['userRequest']['utterance'].strip()
    print(text)
    if text == &quot;hello&quot;:
        dataSend = {
                &quot;version&quot;: &quot;2.0&quot;,
                &quot;template&quot;: {
                    &quot;outputs&quot;: [
                        {
                            &quot;simpleText&quot;: {
                                &quot;text&quot;: &quot;안녕 함 :)&quot;
                            }
                        }
                    ]
                }
            }
    else:
        dataSend = {
                &quot;version&quot;: &quot;2.0&quot;,
                &quot;template&quot;: {
                    &quot;outputs&quot;: [
                        {
                            &quot;simpleText&quot;: {
                                &quot;text&quot;: &quot;안녕 못함 :)&quot;
                            }
                        }
                    ]
                }
            }

    return jsonify(dataSend)
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;url:port/message의 경로에 카카오 챗봇이 보내는 형식대로 데이터를 보내면 조건에 따라 “안녕 함:)”, “안녕 못함 :)”을 보내는 함수이다.&lt;/li&gt;
  &lt;li&gt;이를 적용시키고 다시 실행시켜보자.&lt;/li&gt;
  &lt;li&gt;그리고 승인된 챗봇관리 페이지에서 &lt;strong&gt;스킬&lt;/strong&gt; 메뉴에 들어가서 &lt;strong&gt;생성&lt;/strong&gt;을 눌러 새로운 스킬을 생성하도록하자.&lt;/li&gt;
  &lt;li&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/68745983/120229445-1fd00780-c288-11eb-8207-d376d7a934e3.png&quot; alt=&quot;image&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;위의 url에 &lt;strong&gt;url:port/message&lt;/strong&gt;를 넣어주면 위의 함수의 조건 즉, hello라고 물어본것이 아니면 모두 “안녕 못함 :)”이라고 답변하는 함수가 작동이 된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;next-time&quot;&gt;Next Time….&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;다음 시간에는 의도치않게 inference 시간이 오래걸려 답변을 하지 못하는 일이 생길 수 있다.&lt;/li&gt;
  &lt;li&gt;해당 경우, 어떻게 대처할지 알아보자.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 01 Jun 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/lets_make_kakaobot/</link>
        <guid isPermaLink="true">http://localhost:4000/lets_make_kakaobot/</guid>
        
        
        <category>Backend</category>
        
      </item>
    
      <item>
        <title>meeting_log_2021.05.29</title>
        <description>&lt;h1 id=&quot;20210529-회의록&quot;&gt;2021.05.29 회의록&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;김남혁 님:
    &lt;ul&gt;
      &lt;li&gt;엘라스틱 서치 맞춤법, 한글-&amp;gt;영어 기능 등을 구현해놨다.&lt;/li&gt;
      &lt;li&gt;자동완성 기능은 뺐다.&lt;/li&gt;
      &lt;li&gt;모델 받아서 인퍼런스 파일 드린 상태다.&lt;/li&gt;
      &lt;li&gt;mrc는 성능이슈, ner는 용량이슈 -&amp;gt; 둘다 최적화 필요&lt;/li&gt;
      &lt;li&gt;야구 문서는 3만건으로 줄였는데, 1/4만 야구문서인 것 같다.
        &lt;ul&gt;
          &lt;li&gt;1000자 단위로 자르면 30만건이라 리트리버 속도가 걱정된다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;특정 score 이하인 경우는 재끼기 (리트리버, MRC)
        &lt;ul&gt;
          &lt;li&gt;테스트 해보니 괜찮았다.&lt;/li&gt;
          &lt;li&gt;다시 한번 질문해주세요 이런걸로 해주는게 좋을 것 같다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;우종빈 님:
    &lt;ul&gt;
      &lt;li&gt;헤이스택 보고있고, 이쪽에서도 0.9스코어 미만이면 검색 결과 리턴을 하지 않는다.&lt;/li&gt;
      &lt;li&gt;기본적인 MRC의 구조를 바꾸고 있다. 아직까지 성능향상이 없다.&lt;/li&gt;
      &lt;li&gt;서일 님 데이터를 썼는데, 그 데이터가 신통치 않은 것 같다.
        &lt;ul&gt;
          &lt;li&gt;질문이 단순하고 오류가 많아서 성능 저하가 심하다.&lt;/li&gt;
          &lt;li&gt;실없는 질문을 많이 한다.&lt;/li&gt;
          &lt;li&gt;아예 빼버리거나? 아니면 조금 더 수치적인 질문을 유도하는게 좋을 것 같다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;서일 님 :
        &lt;ul&gt;
          &lt;li&gt;해당 이슈는 지난번 대회에도 있었다.&lt;/li&gt;
          &lt;li&gt;아마 실없는 질문과 쉬운 질문이 많아서 그랫던 것 같다.&lt;/li&gt;
          &lt;li&gt;그래서 해당 방법은 성능을 위한 방법 보다는 이러한 방법을 사용했다는 식으로 어필을 하려고 했던 것이었다.&lt;/li&gt;
          &lt;li&gt;수치에 해당하는 질문을 많이 생성하도록 해보겠다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;KBOBERT 언어 모델을 그렇게 학습시키는 더 맞지 않을까 생각함.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;유영재 님:
    &lt;ul&gt;
      &lt;li&gt;경량화 부분은 그쪽 지식이 없어서 공부를 해보고 있다.&lt;/li&gt;
      &lt;li&gt;룰베이스 쪽을 진행하고 있다.
        &lt;ul&gt;
          &lt;li&gt;크롤링 작업을 진행하고 있다.&lt;/li&gt;
          &lt;li&gt;야구 전문용어.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;백엔드 팀(조민정 님, 최병민 님):
    &lt;ul&gt;
      &lt;li&gt;오늘 테스트 해봤다.
        &lt;ul&gt;
          &lt;li&gt;top10 : 추론시간에 10초나 걸림&lt;/li&gt;
          &lt;li&gt;검색할 문서 ner로 미친듯이 줄이거나 해야겠다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;스코어 기준치 임계점을 파악해야하는데&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;할일&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;김남혁 님: MRC 리트리버 성능 향상(스코어 관련), 후처리&lt;/li&gt;
  &lt;li&gt;서일 님: 데이터 생성&lt;/li&gt;
  &lt;li&gt;우종빈 님: 경량화/모델 학습&lt;/li&gt;
  &lt;li&gt;유영재 님: 룰베이스/경량화&lt;/li&gt;
  &lt;li&gt;백엔드님팀: 파이프라인 구축&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 29 May 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/meeting-log-20210529/</link>
        <guid isPermaLink="true">http://localhost:4000/meeting-log-20210529/</guid>
        
        
      </item>
    
      <item>
        <title>meeting_log_2021.05.22</title>
        <description>&lt;h1 id=&quot;20210522-회의록&quot;&gt;2021.05.22 회의록&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;김남혁 님 :
    &lt;ul&gt;
      &lt;li&gt;회의록 날짜 추가 어떻게 하나요?&lt;/li&gt;
      &lt;li&gt;블로그에 글… 써주세요…&lt;/li&gt;
      &lt;li&gt;오탈자 수정하는 엘라스틱 서치는 꼭 사용하고 싶다.&lt;/li&gt;
      &lt;li&gt;나무위키 문서 정리 하고 있다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;서일 님 :
    &lt;ul&gt;
      &lt;li&gt;MRC 용 야구 전용 데이터를 만들어 줄 수 있다.&lt;/li&gt;
      &lt;li&gt;그리고 koelectra small 모델을 사용하면 훨씬 가벼운 모델을 만들어 줄 수 있다.&lt;/li&gt;
      &lt;li&gt;bm25관련해서 pickle 파일로 만들 계획이다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;우종빈 님 :
    &lt;ul&gt;
      &lt;li&gt;저번에 만들었던 것이 문제가 있어서 다시 만들고 있다.&lt;/li&gt;
      &lt;li&gt;나무위키 데이터 크롤링을 할 때 time.sleep(1)로 하니까 블락을 당하지 않았다.&lt;/li&gt;
      &lt;li&gt;알고리즘을 조금 바꾸니까 순도 높은 데이터만을 수집할 수 있었다.&lt;/li&gt;
      &lt;li&gt;류현진 같은 유명 선수들은 하이퍼 링크가 너무 많다.(여러 문서로 나뉘어져 있다.)&lt;/li&gt;
      &lt;li&gt;하이퍼링크를 두번까지만 탈 수 있도록 해놓았다.&lt;/li&gt;
      &lt;li&gt;후처리는 룰베이스로 진행했다.&lt;/li&gt;
      &lt;li&gt;이후에는 koelectra small로 mrc 개발을 할 계획이며&lt;/li&gt;
      &lt;li&gt;2주 뒤를 데드라인으로 생각하고 작업을 진행 예정.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;유영재 님 :
    &lt;ul&gt;
      &lt;li&gt;음절단위 NER: 생각보다 잘 뽑아준다!! 외국인 선수 이름도&lt;/li&gt;
      &lt;li&gt;후처리 작업이 필요하다.
        &lt;ul&gt;
          &lt;li&gt;태그 붙여서 나오는 단어 처리가 필요할 것 같다.&lt;/li&gt;
          &lt;li&gt;김남혁 님: 레포에 정리해주세요.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;이후에는 룰베이스 기반으로 아웃라이어 쪽으로 해결할 계획이다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;조민정 님 :
    &lt;ul&gt;
      &lt;li&gt;서버를 옮겨야 할 것 같다.&lt;/li&gt;
      &lt;li&gt;어디까지??? 헤로코 서버 에서 올리는게 좋을지?
        &lt;ul&gt;
          &lt;li&gt;저번에 마스크 서비스 올린 것&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://www.heroku.com&quot;&gt;heroku&lt;/a&gt; 여기를 기반으로 해보면 될 것 같다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;일단은 네이버에서 제공하는 서버를 활용할 계획.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 22 May 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/meeting-log-20210522/</link>
        <guid isPermaLink="true">http://localhost:4000/meeting-log-20210522/</guid>
        
        
      </item>
    
      <item>
        <title>meeting_log_2021.05.15</title>
        <description>&lt;h1 id=&quot;20210515-회의록&quot;&gt;2021.05.15 회의록&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;김남혁 님:
    &lt;ul&gt;
      &lt;li&gt;엘라스틱 서치는 세팅한 대로 쓰시면 될 것 같습니다.
        &lt;ul&gt;
          &lt;li&gt;책으로 공부하면서 알게된 기능이 하나 있습니다.&lt;/li&gt;
          &lt;li&gt;7.0.0버전을 사용하면 유용한 플러그인을 달 수 있을 것 같다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;inference 속도는 크게 신경을 안써도 될 것 같다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;서일 님:
    &lt;ul&gt;
      &lt;li&gt;오늘 밤을 새서라도 드리겠다고 말씀을 드렸는데, 내일 밤을 새서라도 말씀을 드리겠다.&lt;/li&gt;
      &lt;li&gt;https://huggingface.co/monologg/koelectra-small-v3-discriminator/tree/main 모델을 해보면 될 것 같다.
        &lt;ul&gt;
          &lt;li&gt;https://huggingface.co/monologg/distilkobert/tree/main 이거보다도 가볍다&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;내일 아침 6시까지 만들어 보겠습니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;유영재 님:
    &lt;ul&gt;
      &lt;li&gt;NER을 음절 단위로 잘라서 학습을 해보는데, 코랩에서 학습을 해보니까 엄청나게 오래 걸리더라.&lt;/li&gt;
      &lt;li&gt;그래서 로컬에서 테스트를 해보고 있다.&lt;/li&gt;
      &lt;li&gt;아직 보여드릴 건 없는 상황이다.&lt;/li&gt;
      &lt;li&gt;남혁 님:
        &lt;ul&gt;
          &lt;li&gt;질문이 고유명사를 포함하는 경우, 그걸 활용하여 문서를 더 잘 가져올 수 있을 것 같다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;백엔드 팀(조민정 님, 최병민 님)
    &lt;ul&gt;
      &lt;li&gt;병민 님 : 엘라스틱 서치를 서버에 올려서 테스트를 해보고 있다.&lt;/li&gt;
      &lt;li&gt;민정 님 : 남혁 님의 경우를 보면 inference의 속도가 큰 영향이 없을 거 같은데,
        &lt;ul&gt;
          &lt;li&gt;네트워크 상태를 고려한 지연 답변 대처를 위한 프로세스 구축 중&lt;/li&gt;
          &lt;li&gt;메모리 이슈가 있다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;엘라스틱 서치를 지원해주는 서버를 사용하거나,&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;다음 주까지 할 일
    &lt;ul&gt;
      &lt;li&gt;김남혁 님 : 엘라스틱 서치 javacafe 설치&lt;/li&gt;
      &lt;li&gt;서일 님 : 야구 전용 QA 모델 작성하기&lt;/li&gt;
      &lt;li&gt;우종빈 님 : 위키 데이터 한번 더 검토하기&lt;/li&gt;
      &lt;li&gt;유영재 님 : NER&lt;/li&gt;
      &lt;li&gt;조민정 님 : 지연과 서버문제에 대해서 해결할 예정&lt;/li&gt;
      &lt;li&gt;최병민 님 : 엘라스틱 서치 세팅&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 15 May 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/meeting-log-20210515/</link>
        <guid isPermaLink="true">http://localhost:4000/meeting-log-20210515/</guid>
        
        
      </item>
    
      <item>
        <title>Elasticsearch-1</title>
        <description>&lt;h1 id=&quot;elasticsearch-1&quot;&gt;Elasticsearch-1&lt;/h1&gt;
&lt;h2 id=&quot;abstract&quot;&gt;Abstract&lt;/h2&gt;

&lt;p&gt;챗봇에서 질문이 들어왔을 때, 그에 대응하는 적절한 문서를 찾아줄 필요가 있습니다. 이때, 검색 엔진 오픈 소스인 Elasticsearch를 사용해서 Retrieval를 구현하려고 합니다. 여기서는 Back-End에 해당하는 내용보다는 Elasticsearch의 검색 성능을 올리기 위한 내용을 다루려고 합니다.&lt;/p&gt;

&lt;h2 id=&quot;setting&quot;&gt;Setting&lt;/h2&gt;

&lt;p&gt;해당 내용은 서버상에 Elasticsearch가 설치되어 있다는 가정하에 작성되었습니다.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;!pip install elasticsearch
elasticsearch-7.12.1/bin/elasticsearch-plugin install analysis-nori # 한국어 토크나이저 설치
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Elasticsearch를 파이썬에서 사용하기 위한 라이브러리 설치합니다. 그리고 처음에는 Elasticsearch에 한국어 토크나이저가 설치되어 있지 않습니다. 따라서, 저희가 따로 설치해줄 필요가 있습니다.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;from elasticsearch import Elasticsearch
es = Elasticsearch('localhost:9200')
print(es.info())
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;이제 파이썬에 Elasticsearch를 연결합니다. 세팅에 따라 다르겠지만, 개인 컴퓨터에서 사용한다면 ‘localhost:9200’로 연결해주시면 됩니다. 그리고 마지막의 print문이 정상적으로 출력이 되면, Elasticsearch가 정상적으로 연결된 것입니다.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;es.indices.create(index = 'document',
                  body = {
                      'settings':{
                          'analysis':{
                              'analyzer':{
                                  'my_analyzer':{
                                      &quot;type&quot;: &quot;custom&quot;,
                                      'tokenizer':'nori_tokenizer',
                                      'decompound_mode':'mixed',
                                      'stopwords':'_korean_',
                                      'synonyms':'_korean_',
                                      &quot;filter&quot;: [&quot;lowercase&quot;,
                                                 &quot;my_shingle_f&quot;,
                                                 &quot;nori_readingform&quot;,
                                                 &quot;nori_number&quot;,
                                                 &quot;cjk_bigram&quot;,
                                                 &quot;decimal_digit&quot;,
                                                 &quot;stemmer&quot;,
                                                 &quot;trim&quot;]
                                  }
                              },
                              'filter':{
                                  'my_shingle_f':{
                                      &quot;type&quot;: &quot;shingle&quot;
                                  }
                              }
                          },
                          'similarity':{
                              'my_similarity':{
                                  'type':'BM25',
                              }
                          }
                      },
                      'mappings':{
                          'properties':{
                              'title':{
                                  'type':'text',
                                  'analyzer':'my_analyzer',
                                  'similarity':'my_similarity'
                              },
                              'text':{
                                  'type':'text',
                                  'analyzer':'my_analyzer',
                                  'similarity':'my_similarity'
                              }
                          }
                      }
                  }
                  )
print(es.indices.get('document'))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Elasticsearch에 문서를 저장할 index를 생성합니다. index는 크게 settings과 mappings로 나뉩니다. settings에는 사용한 기능들을 준비하고 mappings에는 데이터 양식을 준비합니다. 그리고 마지막의 print문이 정상적으로 출력이 되면, index 생성이 완료된 것입니다.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import os

for file_name in os.listdir('/Users/kimnamhyeok/PycharmProjects/pythonProject/club'):
    if file_name != '.DS_Store':
        with open('/Users/kimnamhyeok/PycharmProjects/pythonProject/club/'+file_name, 'r') as f:
            contents = f.read()
        es.index(index='document', body = {&quot;title&quot; : file_name.split('.')[0], &quot;text&quot; : contents})

for file_name in os.listdir('/Users/kimnamhyeok/PycharmProjects/pythonProject/player'):
    if file_name != '.DS_Store':
        with open('/Users/kimnamhyeok/PycharmProjects/pythonProject/player/'+file_name, 'r') as f:
            contents = f.read()
        es.index(index='document', body = {&quot;title&quot; : file_name.split('.')[0], &quot;text&quot; : contents})

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Elasticsearch에 팀 문서와 선수 문서를 저장합니다. bulk 단위로 한 번에 넣는 방법도 있으나, 익숙하지 않은 관계로 정확하게 하기 위해 문서 하나씩 넣어주었습니다.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;question = input()

query = {
    'query': {
        'bool': {
            'should': [
                {'match': {'title': question}},
                {'match': {'text': question}}
            ]
        }
    }
}

doc = es.search(index='document',body=query,size=10)['hits']['hits']

print(doc[0])
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;이제 세팅을 마치고 정상적으로 검색이 되는지 확인할 차례입니다. question을 통해서 정상적으로 검색이 되면, Elasticsearch 세팅이 완료된 것입니다.&lt;/p&gt;

&lt;h1 id=&quot;끝으로&quot;&gt;끝으로&lt;/h1&gt;

&lt;p&gt;Elasticsearch에 대한 기본적인 세팅을 마쳤습니다. 예상되는 질문에는 선수명이나 팀명과 같은 고유명사가 사용될 가능성이 높기 때문에, Elasticsearch를 기반으로 하면 Retrieval에서 좋은 성능을 낼 수 있다고 생각합니다. 다음에는 &lt;a href=&quot;https://github.com/javacafe-project/elasticsearch-plugin&quot;&gt;자바카페 Elasticsearch 플러그인&lt;/a&gt; 기능을 추가해보려고 합니다.&lt;/p&gt;
</description>
        <pubDate>Fri, 14 May 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/elasticsearch-1/</link>
        <guid isPermaLink="true">http://localhost:4000/elasticsearch-1/</guid>
        
        
        <category>MRC</category>
        
      </item>
    
      <item>
        <title>meeting_log_2021.05.08</title>
        <description>&lt;h1 id=&quot;20210508-회의록&quot;&gt;2021.05.08 회의록&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;김남혁 님 :
    &lt;ul&gt;
      &lt;li&gt;일주일에 하나씩 글 써주세요!&lt;/li&gt;
      &lt;li&gt;실험 일지 같은 느낌으로, 꾸준히 쓰면 좋을 것 같다. 형식 구애X&lt;/li&gt;
      &lt;li&gt;미뤄놨던 포스팅 다 함.&lt;/li&gt;
      &lt;li&gt;일반뉴스 + 야구 데이터로 BERT 학습-&amp;gt; 야구를 못맞춘다.
        &lt;ul&gt;
          &lt;li&gt;야구 관련한 데이터를 더 많이 확보하여 그 데이터로 학습을 하고 있다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;MRC쪽 수정하는 중
        &lt;ul&gt;
          &lt;li&gt;엘라스틱 서치를 시험하는 중이다.&lt;/li&gt;
          &lt;li&gt;백엔드에서 엘라스틱을 올려주시면, 추가적인 파라미터 실험이나 안쪽 모델 실험은 제가 진행할 수 있을 것 같다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;서일 님 : 데이터 전처리 4페이지 째 수작업으로 하고 있습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;우종빈 님 :
    &lt;ul&gt;
      &lt;li&gt;mrc 작업하고 있음&lt;/li&gt;
      &lt;li&gt;retrieval 쪽 작업도 병행하고 있다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;유영재 님 :
    &lt;ul&gt;
      &lt;li&gt;지난 주에서 추가로 테스트를 많이 해보지는 않았는데, 테스트 에러가 있어서 이에 대해서 말해보려고 한다.&lt;/li&gt;
      &lt;li&gt;심플한 문제, 이름이나 구단명뒤의 조사처리 문제가 있었다. 음절 단위의 개체명 분석이 나을지 형태소가 나을지
        &lt;ul&gt;
          &lt;li&gt;서일 님: https://kakaobrain.github.io/pororo/seq2seq/wsd.html 이거 추천합미다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;조민정 님 :
    &lt;ul&gt;
      &lt;li&gt;현재 승인받은 유일한 사람입니다.&lt;/li&gt;
      &lt;li&gt;따라서 혼자서 실험을 해보고 있다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;최병민 님 :
    &lt;ul&gt;
      &lt;li&gt;서버로 가져가기, 전처리 하고 있다.&lt;/li&gt;
      &lt;li&gt;계층을 어떻게 구조를 만들어야 할까?&lt;/li&gt;
      &lt;li&gt;엘라스틱 구현할 예정입니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;정리&quot;&gt;정리&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;성능 빼고는 MRC 구현은 어느정도 되었다.
    &lt;ul&gt;
      &lt;li&gt;백엔드 팀: 엘라스틱 서치 사용법 전달 받아 붙여두기&lt;/li&gt;
      &lt;li&gt;MRC 팀: MRC 임시 모델을 만들어서 벡엔드 팀에 전달할 것
        &lt;ul&gt;
          &lt;li&gt;코쿼드1.0 으로 임시모델 가볍게 만들어 드리기: py 파일&lt;/li&gt;
          &lt;li&gt;가볍게, 배치 사이즈 1 모델&lt;/li&gt;
          &lt;li&gt;입력은 그냥 터미널에서 문서랑 쿼리 때려넣어주기&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 08 May 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/meeting-log-20210508/</link>
        <guid isPermaLink="true">http://localhost:4000/meeting-log-20210508/</guid>
        
        
      </item>
    
      <item>
        <title>meeting_log_2021.05.01</title>
        <description>&lt;h1 id=&quot;20210501-회의록&quot;&gt;2021.05.01 회의록&lt;/h1&gt;

&lt;p&gt;속죄스택: 서일 님(2), 조민정 님(1)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;김남혁 님:
    &lt;ul&gt;
      &lt;li&gt;포스트를 쓰려고 했는데 일단 미뤘습니다. 민정님께 배워서 쓰겠습니다.&lt;/li&gt;
      &lt;li&gt;버트는 서버 받은거에 학습시키는 중이다. 일반 위키 데이터 준비 해뒀고 종빈님 데이터 바로 합쳐서 진행할 거고, 다음주 회의 때 까지는 MRC 괜찮게 가져올 수 있을 것 같습니다.&lt;/li&gt;
      &lt;li&gt;약간의 버그가 있는데, 빠르게 진행될 수 있을 것 같습니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;우종빈 님:
    &lt;ul&gt;
      &lt;li&gt;전처리에 애를 먹고 있어서 시간을 뺃기고 있다. 끌고오면 점단위로 나누는데, 방어률에 있는 점단위로도 나눠버려서 힘들어요ㅠㅠ
        &lt;ul&gt;
          &lt;li&gt;서일 님: 죄인이 붙겠습니다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;자연어를 물어보면 정형 데이터에서 답을 가져올 수 있는 그런 트랜스포머 모델이 있다.&lt;/li&gt;
      &lt;li&gt;저희 MRC 야구 전용 데이터로 만들어야 하나요?
        &lt;ul&gt;
          &lt;li&gt;남혁 님: 야구 마스크 지문으로 프리트레인 걸고, 소수의 전용 데이터를 사용해도 될 것 같습니다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;나무위키 데이터도 있다.
        &lt;ul&gt;
          &lt;li&gt;학습에 사용하는게 좋을까요?&lt;/li&gt;
          &lt;li&gt;야구에 관련된 것만?&lt;/li&gt;
          &lt;li&gt;남혁 님: 일반 데이터와 도메인 데이터의 비율을 잘 잡아야할 것 같다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;용준 님:
    &lt;ul&gt;
      &lt;li&gt;NER은 코엘렉트라로 진행했고, 모델 학습이 초기로 되서 뉴스 기사로 찍어봤다.
        &lt;ul&gt;
          &lt;li&gt;생각보다는 안나오는 편이다.( 외귁인 선수 이름과 한국인 선수 이름을 외국인선수 이름을 팀명으로 주는 경우가 왕왕있다.)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;일반적 위키 데이터도 좋지만, 질문 데이터가 들어가는게 효율이 좋을 것 같다.
        &lt;ul&gt;
          &lt;li&gt;GPT 같은 느낌?&lt;/li&gt;
          &lt;li&gt;우종빈 님: 다운스트림에서 KoQuAD로 학습할 텐데, 야구 관련된 도메인 데이터를 얼마나 늘려야 할까?
            &lt;ul&gt;
              &lt;li&gt;김남혁 님: 결과를 보고, 데이터를 추가하는 식으로 진행하는게 효율적일 것 같습니다. 예를 들어 잘 대답 못하는 것들에 대해서 데이터를 만들어 추가학습&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;NER은 MRC를 위한 문서 검색(리-트리버) 용으로 사용할 예정입니다.&lt;/li&gt;
      &lt;li&gt;우종빈 님: 누구랑 누구랑 비교를 용의하게 하는 것이 NER을 활용하면 가능할까요?
        &lt;ul&gt;
          &lt;li&gt;최병민 님: MRC는 고게 좀 어려울 것 같습니다ㅜㅜ&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;전재열 님:
    &lt;ul&gt;
      &lt;li&gt;챗봇 반려당해서 재신청 중이다.&lt;/li&gt;
      &lt;li&gt;기여할 수 있는 부분이 명확하질 않아서.. 하차를 고민하고 있습니다…
        &lt;ul&gt;
          &lt;li&gt;서일 님: 저도 이러케 붙여있는데 ㅠㅠ&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;최병민 님:
    &lt;ul&gt;
      &lt;li&gt;플라스크 쪽으로 찾고, 아이디어를 검토했다.&lt;/li&gt;
      &lt;li&gt;모든 문서에 대한 MRC? 처리를 해야할 것 같다.
        &lt;ul&gt;
          &lt;li&gt;우종빈 님: 리트리버!!!! 저희가!!!!! 지금 1등 입니다!!!!!&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;문서 데이터를 찾을 때, 위계적으로 찾아줄 수도 있을 것 같다.
        &lt;ul&gt;
          &lt;li&gt;아예 카테고리 형식으로 대분류 들어가고, 소분류 들어가기
            &lt;ul&gt;
              &lt;li&gt;리트리버 사용 이전에, 카테고리를 한번 분류하기&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;우종빈 님: 데이터가 조직적이지 않은 경우가 조금 있어서, 바로 리트리버를 사용하는 것도 같이 고려해야할 것 같다.
            &lt;ul&gt;
              &lt;li&gt;최병민 님: 후보군을 찾아주는 건 잘 될 것 같다.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;김남혁 님: 해볼만 한 것 같다. 대분류 정도는 충분히 가능할 것.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;개요를 가지고 프리트레인하기 -&amp;gt; 캬 이건 논문감이다.&lt;/li&gt;
      &lt;li&gt;DST… 도메인 관련 대화 데이터 셋이 있어야 하는데, 구하기가 어려울 것 같습니다… 검토 하겠습니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 01 May 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/meeting_log/2021_05_01</link>
        <guid isPermaLink="true">http://localhost:4000/meeting_log/2021_05_01</guid>
        
        
      </item>
    
      <item>
        <title>KBOBERT-2</title>
        <description>&lt;h1 id=&quot;kbobert-2&quot;&gt;KBOBERT-2&lt;/h1&gt;

&lt;h2 id=&quot;abstract&quot;&gt;Abstract&lt;/h2&gt;

&lt;p&gt;야구 관련 문서 만을 사용해서 BERT를 학습시킬 것인지 일반적인 문서도 추가하여 BERT를 학습시킬 것인지 판단하기 위해서, 지난 번에 수집한 KBO 뉴스 기사와 일반 위키 문서를 바탕으로 BERT를 학습시켜 보았습니다.&lt;/p&gt;

&lt;h2 id=&quot;data&quot;&gt;Data&lt;/h2&gt;

&lt;p&gt;위에서 언급한대로 약 46,000건의 KBO 관련 뉴스와 위키 문서를 사용했습니다.&lt;/p&gt;

&lt;h2 id=&quot;test&quot;&gt;Test&lt;/h2&gt;

&lt;p&gt;그 &lt;a href=&quot;https://github.com/baseballChatbot7/KBOBERT/wiki/Test-2&quot;&gt;결과&lt;/a&gt;, 야구 도메인에 관련된 [MASK]의 예측 능력이 떨어지는 것을 확인할 수 있었습니다. 이로 미루어 보아, 일반적인 문서를 아예 추가하지 않거나 소수만은 추가해야겠다고 판단했습니다.&lt;/p&gt;
</description>
        <pubDate>Sat, 01 May 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/kbobert-2/</link>
        <guid isPermaLink="true">http://localhost:4000/kbobert-2/</guid>
        
        
        <category>MRC</category>
        
      </item>
    
  </channel>
</rss>
